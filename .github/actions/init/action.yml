name: Initialization
description: Common actions to initialize a Job

inputs:
  jdk:
    description: Version of JDK that must be loaded.
    required: false
  minikube:
    description: Determine if minikube should be started, 'true' to start minikube, 'false' to skip.
    required: false
    default: 'false'

outputs:
  kubernetes-ip:
    description: The IP address of the Kubernetes cluster.
    value: ${{ steps.kubernetes-info.outputs.KUBERNETES_IP }}
  kubernetes-port:
    description: The port to interact with the Kubernetes cluster.
    value: ${{ steps.kubernetes-info.outputs.KUBERNETES_PORT }}
  kubernetes-token:
    description: The token to authenticate with the Kubernetes cluster.
    value: ${{ steps.kubernetes-setup.outputs.KUBERNETES_TOKEN }}

runs:
  using: composite
  steps:
    - name: Set up JDK
      if: ${{ inputs.jdk != '' }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.jdk }}
        distribution: adopt

    - name: Cache gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/yarn
          ~/.gradle/nodejs
          ~/.konan
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Start minikube
      if: ${{ inputs.minikube == 'true' }}
      id: minikube
      uses: medyagh/setup-minikube@v0.0.15
      with:
          driver: docker

    - name: Setup kubernetes
      if: ${{ inputs.minikube == 'true' }}
      id: kubernetes-setup
      shell: bash
      run: |
        KUBERNETES_TOKEN=$(sh src/commonTest/resources/configuration/kubernetes/setup.sh)
        echo "Token is: $KUBERNETES_TOKEN"
        echo "KUBERNETES_TOKEN=$KUBERNETES_TOKEN" >> $GITHUB_OUTPUT

    - name: Get kubernetes info
      if: ${{ inputs.minikube == 'true' }}
      id: kubernetes-info
      shell: bash
      run: |
        KUBERNETES_IP=$(minikube ip)
        echo "KUBERNETES_IP=$KUBERNETES_IP" >> $GITHUB_OUTPUT
        
        KUBERNETES_PORT=$(kubectl describe service kubernetes -n default | grep "TargetPort:" | awk '{print $2}' | cut -d '/' -f1)
        echo "KUBERNETES_PORT=$KUBERNETES_PORT" >> $GITHUB_OUTPUT
