name: Build

on:
  push:
    branches-ignore:
      - "v*" # Skip tags
  workflow_dispatch:
    inputs:
      upload-report:
        type: boolean
        description: 'Upload the test report'
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validation:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: gradle/actions/wrapper-validation@v4

  format:
    needs: [ validation ]
    name: Verify Code Format
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Initialization
        uses: ./.github/actions/init

      - name: Check format
        run: ./gradlew ktlintCheck

      - name: Check code style
        run: ./gradlew detektAll

  build:
    needs: [ validation, format ]
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest # MacOS is able to build all platforms
    steps:
      - uses: actions/checkout@v4

      - name: Initialization
        id: init
        uses: ./.github/actions/init
        with:
          jdk: 21

      - name: Build
        run: ./gradlew assemble

  test:
    needs: [ validation, format ]
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
    #          - os: windows-latest -> No matching manifest when pulling Vault image
    #          - os: macos-latest -> Docker-compose command not found
    steps:
      - name: Setup docker-compose
        uses: KengoTODA/actions-setup-docker-compose@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4

      - name: Initialization
        id: init
        uses: ./.github/actions/init
        with:
          jdk: 21

      - name: Setup Kubernetes
        id: kubernetes
        uses: ./.github/actions/kubernetes

      - name: Docker Compose up
        run: docker compose up -d

      - name: Test
        run: ./gradlew allTests
        env:
          KUBERNETES_IP: ${{ steps.kubernetes.outputs.ip }}
          KUBERNETES_PORT: ${{ steps.kubernetes.outputs.port }}
          KUBERNETES_TOKEN: ${{ steps.kubernetes.outputs.token }}

      - name: Upload test report
        if: ${{ github.event.inputs.upload-report == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests
          retention-days: 1
